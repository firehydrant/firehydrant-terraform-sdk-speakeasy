// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-firehydrant-terraform-sdk/internal/sdk/models/shared"
	"net/http"
)

type ListSignalEventSourcesRequest struct {
	// Team ID to send signals to directly
	TeamID *string `queryParam:"style=form,explode=true,name=team_id"`
	// Escalation policy ID to send signals to directly. `team_id` is required if this is provided.
	EscalationPolicyID *string `queryParam:"style=form,explode=true,name=escalation_policy_id"`
	// On-call schedule ID to send signals to directly. `team_id` is required if this is provided.
	OnCallScheduleID *string `queryParam:"style=form,explode=true,name=on_call_schedule_id"`
	// User ID to send signals to directly
	UserID *string `queryParam:"style=form,explode=true,name=user_id"`
}

func (o *ListSignalEventSourcesRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *ListSignalEventSourcesRequest) GetEscalationPolicyID() *string {
	if o == nil {
		return nil
	}
	return o.EscalationPolicyID
}

func (o *ListSignalEventSourcesRequest) GetOnCallScheduleID() *string {
	if o == nil {
		return nil
	}
	return o.OnCallScheduleID
}

func (o *ListSignalEventSourcesRequest) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

type ListSignalEventSourcesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A collection of codes that generally means the end user got something wrong in making the request
	BadRequest *shared.BadRequest
	// A collection of codes that generally means the client was not authenticated correctly for the request they want to make
	Unauthorized *shared.Unauthorized
	// Status codes relating to the resource/entity they are requesting not being found or endpoints/routes not existing
	NotFound *shared.NotFound
	// Status codes relating to the client being rate limited by the server
	RateLimited *shared.RateLimited
	// A collection of status codes that generally mean the server failed in an unexpected way
	InternalServerError *shared.InternalServerError
	// Timeouts occurred with the request
	Timeout *shared.Timeout
}

func (o *ListSignalEventSourcesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListSignalEventSourcesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListSignalEventSourcesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListSignalEventSourcesResponse) GetBadRequest() *shared.BadRequest {
	if o == nil {
		return nil
	}
	return o.BadRequest
}

func (o *ListSignalEventSourcesResponse) GetUnauthorized() *shared.Unauthorized {
	if o == nil {
		return nil
	}
	return o.Unauthorized
}

func (o *ListSignalEventSourcesResponse) GetNotFound() *shared.NotFound {
	if o == nil {
		return nil
	}
	return o.NotFound
}

func (o *ListSignalEventSourcesResponse) GetRateLimited() *shared.RateLimited {
	if o == nil {
		return nil
	}
	return o.RateLimited
}

func (o *ListSignalEventSourcesResponse) GetInternalServerError() *shared.InternalServerError {
	if o == nil {
		return nil
	}
	return o.InternalServerError
}

func (o *ListSignalEventSourcesResponse) GetTimeout() *shared.Timeout {
	if o == nil {
		return nil
	}
	return o.Timeout
}
