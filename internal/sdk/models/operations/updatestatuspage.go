// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-firehydrant-terraform-sdk/internal/sdk/models/shared"
	"net/http"
)

type UpdateStatusPageRequestBody struct {
	CompanyName        *string `json:"company_name,omitempty"`
	CompanyWebsite     *string `json:"company_website,omitempty"`
	CompanyTosURL      *string `json:"company_tos_url,omitempty"`
	GreetingTitle      *string `json:"greeting_title,omitempty"`
	GreetingBody       *string `json:"greeting_body,omitempty"`
	OperationalMessage *string `json:"operational_message,omitempty"`
	Title              *string `json:"title,omitempty"`
	// Status page condition to map your severity matrix condition to
	ConditionsNuncCondition []string `json:"conditions[nunc_condition]"`
	// Severity matrix condition id
	ConditionsConditionID        []string `json:"conditions[condition_id]"`
	ComponentsInfrastructureType []string `json:"components[infrastructure_type]"`
	ComponentsInfrastructureID   []string `json:"components[infrastructure_id]"`
	PrimaryColor                 *string  `json:"primary_color,omitempty"`
	SecondaryColor               *string  `json:"secondary_color,omitempty"`
	ExposedFields                []string `json:"exposed_fields,omitempty"`
	EnableHistogram              *bool    `json:"enable_histogram,omitempty"`
	UIVersion                    *int     `json:"ui_version,omitempty"`
}

func (o *UpdateStatusPageRequestBody) GetCompanyName() *string {
	if o == nil {
		return nil
	}
	return o.CompanyName
}

func (o *UpdateStatusPageRequestBody) GetCompanyWebsite() *string {
	if o == nil {
		return nil
	}
	return o.CompanyWebsite
}

func (o *UpdateStatusPageRequestBody) GetCompanyTosURL() *string {
	if o == nil {
		return nil
	}
	return o.CompanyTosURL
}

func (o *UpdateStatusPageRequestBody) GetGreetingTitle() *string {
	if o == nil {
		return nil
	}
	return o.GreetingTitle
}

func (o *UpdateStatusPageRequestBody) GetGreetingBody() *string {
	if o == nil {
		return nil
	}
	return o.GreetingBody
}

func (o *UpdateStatusPageRequestBody) GetOperationalMessage() *string {
	if o == nil {
		return nil
	}
	return o.OperationalMessage
}

func (o *UpdateStatusPageRequestBody) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *UpdateStatusPageRequestBody) GetConditionsNuncCondition() []string {
	if o == nil {
		return []string{}
	}
	return o.ConditionsNuncCondition
}

func (o *UpdateStatusPageRequestBody) GetConditionsConditionID() []string {
	if o == nil {
		return []string{}
	}
	return o.ConditionsConditionID
}

func (o *UpdateStatusPageRequestBody) GetComponentsInfrastructureType() []string {
	if o == nil {
		return []string{}
	}
	return o.ComponentsInfrastructureType
}

func (o *UpdateStatusPageRequestBody) GetComponentsInfrastructureID() []string {
	if o == nil {
		return []string{}
	}
	return o.ComponentsInfrastructureID
}

func (o *UpdateStatusPageRequestBody) GetPrimaryColor() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryColor
}

func (o *UpdateStatusPageRequestBody) GetSecondaryColor() *string {
	if o == nil {
		return nil
	}
	return o.SecondaryColor
}

func (o *UpdateStatusPageRequestBody) GetExposedFields() []string {
	if o == nil {
		return nil
	}
	return o.ExposedFields
}

func (o *UpdateStatusPageRequestBody) GetEnableHistogram() *bool {
	if o == nil {
		return nil
	}
	return o.EnableHistogram
}

func (o *UpdateStatusPageRequestBody) GetUIVersion() *int {
	if o == nil {
		return nil
	}
	return o.UIVersion
}

type UpdateStatusPageRequest struct {
	NuncConnectionID string                      `pathParam:"style=simple,explode=false,name=nunc_connection_id"`
	RequestBody      UpdateStatusPageRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateStatusPageRequest) GetNuncConnectionID() string {
	if o == nil {
		return ""
	}
	return o.NuncConnectionID
}

func (o *UpdateStatusPageRequest) GetRequestBody() UpdateStatusPageRequestBody {
	if o == nil {
		return UpdateStatusPageRequestBody{}
	}
	return o.RequestBody
}

type UpdateStatusPageResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Update your company's information and other components in the specified FireHydrant hosted status page.
	NuncConnectionEntity *shared.NuncConnectionEntity
	// A collection of codes that generally means the end user got something wrong in making the request
	BadRequest *shared.BadRequest
	// A collection of codes that generally means the client was not authenticated correctly for the request they want to make
	Unauthorized *shared.Unauthorized
	// Status codes relating to the resource/entity they are requesting not being found or endpoints/routes not existing
	NotFound *shared.NotFound
	// Status codes relating to the client being rate limited by the server
	RateLimited *shared.RateLimited
	// A collection of status codes that generally mean the server failed in an unexpected way
	InternalServerError *shared.InternalServerError
	// Timeouts occurred with the request
	Timeout *shared.Timeout
}

func (o *UpdateStatusPageResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateStatusPageResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateStatusPageResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateStatusPageResponse) GetNuncConnectionEntity() *shared.NuncConnectionEntity {
	if o == nil {
		return nil
	}
	return o.NuncConnectionEntity
}

func (o *UpdateStatusPageResponse) GetBadRequest() *shared.BadRequest {
	if o == nil {
		return nil
	}
	return o.BadRequest
}

func (o *UpdateStatusPageResponse) GetUnauthorized() *shared.Unauthorized {
	if o == nil {
		return nil
	}
	return o.Unauthorized
}

func (o *UpdateStatusPageResponse) GetNotFound() *shared.NotFound {
	if o == nil {
		return nil
	}
	return o.NotFound
}

func (o *UpdateStatusPageResponse) GetRateLimited() *shared.RateLimited {
	if o == nil {
		return nil
	}
	return o.RateLimited
}

func (o *UpdateStatusPageResponse) GetInternalServerError() *shared.InternalServerError {
	if o == nil {
		return nil
	}
	return o.InternalServerError
}

func (o *UpdateStatusPageResponse) GetTimeout() *shared.Timeout {
	if o == nil {
		return nil
	}
	return o.Timeout
}
