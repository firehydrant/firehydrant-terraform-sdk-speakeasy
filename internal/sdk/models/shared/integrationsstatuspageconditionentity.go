// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StatuspageioCondition string

const (
	StatuspageioConditionOperational         StatuspageioCondition = "operational"
	StatuspageioConditionMajorOutage         StatuspageioCondition = "major_outage"
	StatuspageioConditionMinorOutage         StatuspageioCondition = "minor_outage"
	StatuspageioConditionDegradedPerformance StatuspageioCondition = "degraded_performance"
)

func (e StatuspageioCondition) ToPointer() *StatuspageioCondition {
	return &e
}
func (e *StatuspageioCondition) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "operational":
		fallthrough
	case "major_outage":
		fallthrough
	case "minor_outage":
		fallthrough
	case "degraded_performance":
		*e = StatuspageioCondition(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatuspageioCondition: %v", v)
	}
}

type IntegrationsStatuspageConditionEntity struct {
	ConditionID           *string                `json:"condition_id,omitempty"`
	ConditionName         *string                `json:"condition_name,omitempty"`
	StatuspageioCondition *StatuspageioCondition `json:"statuspageio_condition,omitempty"`
}

func (o *IntegrationsStatuspageConditionEntity) GetConditionID() *string {
	if o == nil {
		return nil
	}
	return o.ConditionID
}

func (o *IntegrationsStatuspageConditionEntity) GetConditionName() *string {
	if o == nil {
		return nil
	}
	return o.ConditionName
}

func (o *IntegrationsStatuspageConditionEntity) GetStatuspageioCondition() *StatuspageioCondition {
	if o == nil {
		return nil
	}
	return o.StatuspageioCondition
}
