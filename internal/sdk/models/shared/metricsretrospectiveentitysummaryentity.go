// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type MetricsRetrospectiveEntitySummaryEntity struct {
	Completed            *int     `json:"completed,omitempty"`
	Total                *int     `json:"total,omitempty"`
	Incomplete           *int     `json:"incomplete,omitempty"`
	Mean                 *float32 `json:"mean,omitempty"`
	Shortest             *float32 `json:"shortest,omitempty"`
	Longest              *float32 `json:"longest,omitempty"`
	CompletionPercentage *float32 `json:"completion_percentage,omitempty"`
}

func (o *MetricsRetrospectiveEntitySummaryEntity) GetCompleted() *int {
	if o == nil {
		return nil
	}
	return o.Completed
}

func (o *MetricsRetrospectiveEntitySummaryEntity) GetTotal() *int {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *MetricsRetrospectiveEntitySummaryEntity) GetIncomplete() *int {
	if o == nil {
		return nil
	}
	return o.Incomplete
}

func (o *MetricsRetrospectiveEntitySummaryEntity) GetMean() *float32 {
	if o == nil {
		return nil
	}
	return o.Mean
}

func (o *MetricsRetrospectiveEntitySummaryEntity) GetShortest() *float32 {
	if o == nil {
		return nil
	}
	return o.Shortest
}

func (o *MetricsRetrospectiveEntitySummaryEntity) GetLongest() *float32 {
	if o == nil {
		return nil
	}
	return o.Longest
}

func (o *MetricsRetrospectiveEntitySummaryEntity) GetCompletionPercentage() *float32 {
	if o == nil {
		return nil
	}
	return o.CompletionPercentage
}
