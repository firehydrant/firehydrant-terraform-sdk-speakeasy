// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection - The direction you would like to vote, or if you dig it
type PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection string

const (
	PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirectionUp   PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection = "up"
	PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirectionDown PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection = "down"
	PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirectionDig  PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection = "dig"
)

func (e PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection) ToPointer() *PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection {
	return &e
}
func (e *PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "up":
		fallthrough
	case "down":
		fallthrough
	case "dig":
		*e = PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection: %v", v)
	}
}

// PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotes - Allows for upvoting or downvoting an event
type PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotes struct {
	// The direction you would like to vote, or if you dig it
	Direction PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection `json:"direction"`
}

func (o *PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotes) GetDirection() PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection {
	if o == nil {
		return PatchV1RunbooksExecutionsExecutionIDStepsStepIDVotesDirection("")
	}
	return o.Direction
}
