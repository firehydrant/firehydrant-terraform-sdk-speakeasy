// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PostV1IncidentsIncidentIDRelatedChangeEventsType string

const (
	PostV1IncidentsIncidentIDRelatedChangeEventsTypeCaused    PostV1IncidentsIncidentIDRelatedChangeEventsType = "caused"
	PostV1IncidentsIncidentIDRelatedChangeEventsTypeFixed     PostV1IncidentsIncidentIDRelatedChangeEventsType = "fixed"
	PostV1IncidentsIncidentIDRelatedChangeEventsTypeSuspect   PostV1IncidentsIncidentIDRelatedChangeEventsType = "suspect"
	PostV1IncidentsIncidentIDRelatedChangeEventsTypeDismissed PostV1IncidentsIncidentIDRelatedChangeEventsType = "dismissed"
)

func (e PostV1IncidentsIncidentIDRelatedChangeEventsType) ToPointer() *PostV1IncidentsIncidentIDRelatedChangeEventsType {
	return &e
}
func (e *PostV1IncidentsIncidentIDRelatedChangeEventsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "caused":
		fallthrough
	case "fixed":
		fallthrough
	case "suspect":
		fallthrough
	case "dismissed":
		*e = PostV1IncidentsIncidentIDRelatedChangeEventsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostV1IncidentsIncidentIDRelatedChangeEventsType: %v", v)
	}
}

// PostV1IncidentsIncidentIDRelatedChangeEvents - Add a related change to an incident. Changes added to an incident can be causes, fixes, or suspects. To remove a change from an incident, the type field should be set to dismissed.
type PostV1IncidentsIncidentIDRelatedChangeEvents struct {
	// The ID of the change event to associate
	ChangeEventID string                                           `json:"change_event_id"`
	Type          PostV1IncidentsIncidentIDRelatedChangeEventsType `json:"type"`
	// A short description about why this change event is related
	Why *string `json:"why,omitempty"`
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEvents) GetChangeEventID() string {
	if o == nil {
		return ""
	}
	return o.ChangeEventID
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEvents) GetType() PostV1IncidentsIncidentIDRelatedChangeEventsType {
	if o == nil {
		return PostV1IncidentsIncidentIDRelatedChangeEventsType("")
	}
	return o.Type
}

func (o *PostV1IncidentsIncidentIDRelatedChangeEvents) GetWhy() *string {
	if o == nil {
		return nil
	}
	return o.Why
}
